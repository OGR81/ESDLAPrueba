@model MESBG.Models.EscenariosViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-4.7.0" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/custom.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">

    <style>
        .form-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 50px;
            margin-bottom: 20px;
        }

        .imagen-carpeta {
            width: 90%;
            height: 90%;
            transition: transform 0.3s;
        }

        .imagen-carpeta:hover {
                transform: scale(1.5);
                cursor: zoom-out;
        }
        
    </style>
</head>
<body>
    <h1>Escenarios</h1>

    <div class="form-container">
        <form method="post" class="form-flex">
            <div class="form-group">
                <label for="CarpetaSeleccionada">Seleccione una carpeta:</label>
                <select id="CarpetaSeleccionada" name="CarpetaSeleccionada" title="Seleccione una carpeta" class="form-select">
                    <option value="">Seleccione una carpeta</option>
                    @foreach (var carpeta in Model.Carpetas)
                    {
                        <option value="@carpeta">@carpeta</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Mostrar escenarios</button>
            </div>
        </form>
    </div>

    @if (!string.IsNullOrEmpty(Model.CarpetaSeleccionada))
    {
        <h2>@Model.CarpetaSeleccionada</h2>
        <div class="imagen-container">
            @foreach (var imagen in Model.Imagenes)
            {
                <div class="row-container">
                    @{
                        // Obtener el nombre del archivo sin la extensión
                        var nombreImagen = imagen.Substring(0, imagen.LastIndexOf("."));
                    }

                    <img src="@Url.Content("~/images/" + Model.CarpetaSeleccionada + "/" + imagen)" alt="Imagen" class="imagen-carpeta" />
                    <p>@nombreImagen</p>
                </div>
            }
        </div>
    }

</body>
</html>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

